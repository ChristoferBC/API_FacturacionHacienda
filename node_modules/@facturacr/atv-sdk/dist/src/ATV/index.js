"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ATV = void 0;
const axios_1 = __importDefault(require("axios"));
const GetToken_1 = require("../services/getToken/GetToken");
const parser = __importStar(require("fast-xml-parser"));
const querystring_1 = __importDefault(require("querystring"));
const createDocument_1 = require("./useCases/createDocument");
const createReceptorMessage_1 = require("./useCases/createReceptorMessage");
class ATV {
    constructor(options, mode = 'prod') {
        this.mode = mode;
        this.options = options;
    }
    getToken(params) {
        const tokenService = new GetToken_1.GetToken(this);
        return tokenService.execute(params);
    }
    createDocumentCommand(input) {
        const createDocument = new createDocument_1.CreateDocumentCommand(this);
        return createDocument.execute(input);
    }
    createReceptorMessage(input) {
        const useCase = new createReceptorMessage_1.CreateReceptorMessageCommand(this);
        return useCase.execute(input);
    }
    sendDocument(input) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const response = yield (0, axios_1.default)(input);
                return {
                    status: response.status,
                    location: response.headers.location,
                    errorCause: null
                };
            }
            catch (error) {
                const response = error.response || {};
                const header = response.headers || {};
                return {
                    status: error.response.status || 500,
                    errorCause: header['x-error-cause'],
                    location: null
                };
            }
        });
    }
    // eslint-disable-next-line @typescript-eslint/explicit-function-return-type
    sendConfirmation(input) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const response = yield (0, axios_1.default)(input);
                const xmlResponse = response.data['respuesta-xml'];
                const headerResultState = response.data['ind-estado'];
                if (!xmlResponse) {
                    throw new Error('NO_XML_IN_RESPONSE');
                }
                const xmlString = this.decodeBase64(xmlResponse);
                return {
                    status: response.status,
                    headerResultState,
                    confirmation: this.parseConfirmationMessage(xmlString),
                    xml: xmlString,
                    rawResponse: response,
                    errorCause: null
                };
            }
            catch (error) {
                const response = error.response || {};
                return {
                    status: response.status || 500,
                    errorCause: response.statusText || error.message,
                    rawResponse: response
                };
            }
        });
    }
    parseConfirmationMessage(xml) {
        const parsedXml = parser.parse(xml, {
            ignoreAttributes: false,
            tagValueProcessor: a => querystring_1.default.unescape(a.replace(/(\r\n|\n|\r)/gm, '')),
            ignoreNameSpace: false,
            parseNodeValue: false
        });
        const msj = parsedXml.MensajeHacienda;
        return {
            clave: msj.Clave,
            message: msj.Mensaje,
            details: msj.DetalleMensaje,
            emitterFullName: msj.NombreEmisor,
            emitterIdentifierId: msj.NumeroCedulaEmisor,
            receiverIdentifierId: msj.NumeroCedulaReceptor,
            taxesTotalAmount: msj.MontoTotalImpuesto,
            totalInvoiceAmount: msj.TotalFactura
        };
    }
    decodeBase64(encodedStr) {
        const buff = Buffer.from(encodedStr, 'base64');
        return buff.toString('utf-8');
    }
}
exports.ATV = ATV;
//# sourceMappingURL=index.js.map