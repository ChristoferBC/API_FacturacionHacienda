import { __decorate, __metadata } from "tslib";
import { XmlAttribute, XmlChildElement, XmlElement } from 'xml-core';
import { ObjectIdentifier } from './object_identifier.js';
import { XmlXades } from './xml.js';
import { XadesObject } from './xml_base.js';
let DataObjectFormat = class DataObjectFormat extends XadesObject {
};
__decorate([
    XmlAttribute({
        localName: XmlXades.AttributeNames.ObjectReference,
        required: true,
    }),
    __metadata("design:type", String)
], DataObjectFormat.prototype, "ObjectReference", void 0);
__decorate([
    XmlChildElement({
        localName: XmlXades.ElementNames.Description,
        namespaceURI: XmlXades.NamespaceURI,
        prefix: XmlXades.DefaultPrefix,
    }),
    __metadata("design:type", String)
], DataObjectFormat.prototype, "Description", void 0);
__decorate([
    XmlChildElement({ parser: ObjectIdentifier }),
    __metadata("design:type", ObjectIdentifier)
], DataObjectFormat.prototype, "ObjectIdentifier", void 0);
__decorate([
    XmlChildElement({
        localName: XmlXades.ElementNames.MimeType,
        namespaceURI: XmlXades.NamespaceURI,
        prefix: XmlXades.DefaultPrefix,
    }),
    __metadata("design:type", String)
], DataObjectFormat.prototype, "MimeType", void 0);
__decorate([
    XmlChildElement({
        localName: XmlXades.ElementNames.Encoding,
        namespaceURI: XmlXades.NamespaceURI,
        prefix: XmlXades.DefaultPrefix,
    }),
    __metadata("design:type", String)
], DataObjectFormat.prototype, "Encoding", void 0);
DataObjectFormat = __decorate([
    XmlElement({ localName: XmlXades.ElementNames.DataObjectFormat })
], DataObjectFormat);
export { DataObjectFormat };
