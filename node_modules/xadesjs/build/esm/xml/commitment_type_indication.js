import { __decorate, __metadata } from "tslib";
import { XmlChildElement, XmlContent, XmlElement } from 'xml-core';
import { Any } from './any.js';
import { ObjectIdentifier } from './object_identifier.js';
import { XmlXades } from './xml.js';
import { XadesCollection, XadesObject } from './xml_base.js';
let CommitmentTypeQualifier = class CommitmentTypeQualifier extends Any {
};
CommitmentTypeQualifier = __decorate([
    XmlElement({ localName: XmlXades.ElementNames.CommitmentTypeQualifier })
], CommitmentTypeQualifier);
export { CommitmentTypeQualifier };
let CommitmentTypeQualifiers = class CommitmentTypeQualifiers extends XadesCollection {
};
CommitmentTypeQualifiers = __decorate([
    XmlElement({
        localName: XmlXades.ElementNames.CommitmentTypeQualifiers,
        parser: CommitmentTypeQualifier,
    })
], CommitmentTypeQualifiers);
export { CommitmentTypeQualifiers };
let ObjectReference = class ObjectReference extends XadesObject {
};
__decorate([
    XmlContent({ required: true }),
    __metadata("design:type", String)
], ObjectReference.prototype, "Value", void 0);
ObjectReference = __decorate([
    XmlElement({ localName: XmlXades.ElementNames.ObjectReference })
], ObjectReference);
export { ObjectReference };
let ObjectReferenceCollection = class ObjectReferenceCollection extends XadesCollection {
};
ObjectReferenceCollection = __decorate([
    XmlElement({
        localName: 'ObjectReferences',
        parser: ObjectReference,
    })
], ObjectReferenceCollection);
export { ObjectReferenceCollection };
const XmlAllSignedDataObjectsConverter = {
    set: (value) => {
        return true;
    },
    get: (value) => {
        return void 0;
    },
};
let CommitmentTypeIndication = class CommitmentTypeIndication extends XadesObject {
};
__decorate([
    XmlChildElement({
        localName: XmlXades.ElementNames.CommitmentTypeId,
        required: true,
        namespaceURI: XmlXades.NamespaceURI,
        prefix: XmlXades.DefaultPrefix,
        parser: ObjectIdentifier,
    }),
    __metadata("design:type", ObjectIdentifier)
], CommitmentTypeIndication.prototype, "CommitmentTypeId", void 0);
__decorate([
    XmlChildElement({
        parser: ObjectReferenceCollection,
        noRoot: true,
    }),
    __metadata("design:type", ObjectReferenceCollection)
], CommitmentTypeIndication.prototype, "ObjectReference", void 0);
__decorate([
    XmlChildElement({
        localName: XmlXades.ElementNames.AllSignedDataObjects,
        namespaceURI: XmlXades.NamespaceURI,
        prefix: XmlXades.DefaultPrefix,
        converter: XmlAllSignedDataObjectsConverter,
        defaultValue: false,
    }),
    __metadata("design:type", Boolean)
], CommitmentTypeIndication.prototype, "AllSignedDataObjects", void 0);
__decorate([
    XmlChildElement({
        localName: XmlXades.ElementNames.CommitmentTypeQualifiers,
        parser: CommitmentTypeQualifier,
    }),
    __metadata("design:type", CommitmentTypeQualifiers)
], CommitmentTypeIndication.prototype, "CommitmentTypeQualifiers", void 0);
CommitmentTypeIndication = __decorate([
    XmlElement({ localName: XmlXades.ElementNames.CommitmentTypeIndication })
], CommitmentTypeIndication);
export { CommitmentTypeIndication };
