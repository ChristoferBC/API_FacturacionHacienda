import { __decorate, __metadata } from "tslib";
import { XmlAttribute, XmlChildElement, XmlElement } from 'xml-core';
import { Any } from './any.js';
import { EncapsulatedPKIData } from './encapsulated_pki_data.js';
import { XmlXades } from './xml.js';
import { XadesCollection, XadesObject } from './xml_base.js';
let OtherCertificate = class OtherCertificate extends Any {
};
OtherCertificate = __decorate([
    XmlElement({ localName: XmlXades.ElementNames.OtherCertificate })
], OtherCertificate);
export { OtherCertificate };
let OtherCertificateCollection = class OtherCertificateCollection extends XadesCollection {
};
OtherCertificateCollection = __decorate([
    XmlElement({
        localName: 'OtherCertificateCollection',
        parser: OtherCertificate,
    })
], OtherCertificateCollection);
export { OtherCertificateCollection };
let EncapsulatedX509Certificate = class EncapsulatedX509Certificate extends EncapsulatedPKIData {
};
EncapsulatedX509Certificate = __decorate([
    XmlElement({ localName: XmlXades.ElementNames.EncapsulatedX509Certificate })
], EncapsulatedX509Certificate);
export { EncapsulatedX509Certificate };
let EncapsulatedX509CertificateCollection = class EncapsulatedX509CertificateCollection extends XadesCollection {
};
EncapsulatedX509CertificateCollection = __decorate([
    XmlElement({
        localName: 'EncapsulatedX509CertificateCollection',
        parser: EncapsulatedX509Certificate,
    })
], EncapsulatedX509CertificateCollection);
export { EncapsulatedX509CertificateCollection };
let CertificateValues = class CertificateValues extends XadesObject {
};
__decorate([
    XmlAttribute({
        localName: XmlXades.AttributeNames.Id,
        defaultValue: '',
    }),
    __metadata("design:type", String)
], CertificateValues.prototype, "Id", void 0);
__decorate([
    XmlChildElement({
        parser: EncapsulatedX509CertificateCollection,
        noRoot: true,
    }),
    __metadata("design:type", EncapsulatedX509CertificateCollection)
], CertificateValues.prototype, "EncapsulatedX509Certificates", void 0);
__decorate([
    XmlChildElement({
        parser: OtherCertificateCollection,
        noRoot: true,
    }),
    __metadata("design:type", OtherCertificateCollection)
], CertificateValues.prototype, "OtherCertificates", void 0);
CertificateValues = __decorate([
    XmlElement({ localName: XmlXades.ElementNames.CertificateValues })
], CertificateValues);
export { CertificateValues };
