import { __decorate, __metadata } from "tslib";
import { XmlAttribute, XmlChildElement, XmlContent, XmlElement } from 'xml-core';
import { XmlXades } from './xml.js';
import { XadesCollection, XadesObject } from './xml_base.js';
let Identifier = class Identifier extends XadesObject {
};
__decorate([
    XmlAttribute({ localName: XmlXades.AttributeNames.Qualifier }),
    __metadata("design:type", String)
], Identifier.prototype, "Qualifier", void 0);
__decorate([
    XmlContent({
        defaultValue: '',
        required: true,
    }),
    __metadata("design:type", String)
], Identifier.prototype, "Value", void 0);
Identifier = __decorate([
    XmlElement({ localName: XmlXades.ElementNames.Identifier })
], Identifier);
export { Identifier };
let DocumentationReference = class DocumentationReference extends XadesObject {
    OnLoadXml(e) {
        if (e.textContent) {
            this.Uri = e.textContent;
        }
    }
    OnGetXml(e) {
        if (this.Uri) {
            e.textContent = this.Uri;
        }
    }
};
__decorate([
    XmlContent({
        defaultValue: '',
        required: true,
    }),
    __metadata("design:type", String)
], DocumentationReference.prototype, "Uri", void 0);
DocumentationReference = __decorate([
    XmlElement({ localName: XmlXades.ElementNames.DocumentationReference })
], DocumentationReference);
export { DocumentationReference };
let DocumentationReferences = class DocumentationReferences extends XadesCollection {
};
DocumentationReferences = __decorate([
    XmlElement({
        localName: XmlXades.ElementNames.DocumentationReferences,
        parser: DocumentationReference,
    })
], DocumentationReferences);
export { DocumentationReferences };
let ObjectIdentifier = class ObjectIdentifier extends XadesObject {
};
__decorate([
    XmlChildElement({
        parser: Identifier,
        required: true,
    }),
    __metadata("design:type", Identifier)
], ObjectIdentifier.prototype, "Identifier", void 0);
__decorate([
    XmlChildElement({
        localName: XmlXades.ElementNames.Description,
        namespaceURI: XmlXades.NamespaceURI,
        prefix: XmlXades.DefaultPrefix,
        defaultValue: '',
    }),
    __metadata("design:type", String)
], ObjectIdentifier.prototype, "Description", void 0);
__decorate([
    XmlChildElement({ parser: DocumentationReferences }),
    __metadata("design:type", DocumentationReferences)
], ObjectIdentifier.prototype, "DocumentationReferences", void 0);
ObjectIdentifier = __decorate([
    XmlElement({ localName: XmlXades.ElementNames.ObjectIdentifier })
], ObjectIdentifier);
export { ObjectIdentifier };
