import { __decorate, __metadata } from "tslib";
import { XmlAttribute, XmlChildElement, XmlElement } from 'xml-core';
import { EncapsulatedPKIData } from './encapsulated_pki_data.js';
import { XmlXades } from './xml.js';
import { XadesCollection, XadesObject } from './xml_base.js';
let OtherValue = class OtherValue extends EncapsulatedPKIData {
};
OtherValue = __decorate([
    XmlElement({ localName: XmlXades.ElementNames.OtherValue })
], OtherValue);
export { OtherValue };
let OtherValues = class OtherValues extends XadesCollection {
};
OtherValues = __decorate([
    XmlElement({
        localName: XmlXades.ElementNames.OCSPValues,
        parser: OtherValue,
    })
], OtherValues);
export { OtherValues };
let EncapsulatedOCSPValue = class EncapsulatedOCSPValue extends EncapsulatedPKIData {
};
EncapsulatedOCSPValue = __decorate([
    XmlElement({ localName: XmlXades.ElementNames.EncapsulatedOCSPValue })
], EncapsulatedOCSPValue);
export { EncapsulatedOCSPValue };
let OCSPValues = class OCSPValues extends XadesCollection {
};
OCSPValues = __decorate([
    XmlElement({
        localName: XmlXades.ElementNames.OCSPValues,
        parser: EncapsulatedOCSPValue,
    })
], OCSPValues);
export { OCSPValues };
let EncapsulatedCRLValue = class EncapsulatedCRLValue extends EncapsulatedPKIData {
};
EncapsulatedCRLValue = __decorate([
    XmlElement({ localName: XmlXades.ElementNames.EncapsulatedCRLValue })
], EncapsulatedCRLValue);
export { EncapsulatedCRLValue };
let CRLValues = class CRLValues extends XadesCollection {
};
CRLValues = __decorate([
    XmlElement({
        localName: XmlXades.ElementNames.CRLValues,
        parser: EncapsulatedCRLValue,
    })
], CRLValues);
export { CRLValues };
let RevocationValues = class RevocationValues extends XadesObject {
};
__decorate([
    XmlAttribute({
        localName: XmlXades.AttributeNames.Id,
        defaultValue: '',
    }),
    __metadata("design:type", String)
], RevocationValues.prototype, "Id", void 0);
__decorate([
    XmlChildElement({ parser: CRLValues }),
    __metadata("design:type", CRLValues)
], RevocationValues.prototype, "CRLValues", void 0);
__decorate([
    XmlChildElement({ parser: OCSPValues }),
    __metadata("design:type", OCSPValues)
], RevocationValues.prototype, "OCSPValues", void 0);
__decorate([
    XmlChildElement({ parser: OtherValues }),
    __metadata("design:type", OtherValues)
], RevocationValues.prototype, "OtherValues", void 0);
RevocationValues = __decorate([
    XmlElement({ localName: XmlXades.ElementNames.RevocationValues })
], RevocationValues);
export { RevocationValues };
