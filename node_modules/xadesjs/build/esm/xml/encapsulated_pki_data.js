import { __decorate, __metadata } from "tslib";
import { XmlAttribute, XmlContent, XmlElement, XmlBase64Converter } from 'xml-core';
import { XmlXades } from './xml.js';
import { XadesObject } from './xml_base.js';
const XmlEncodingConverter = {
    get: (value) => {
        switch (value) {
            case 'der':
            case 'ber':
            case 'cer':
            case 'per':
            case 'xer':
                return `http://uri.etsi.org/01903/v1.2.2#${value.toUpperCase()}`;
        }
        return void 0;
    },
    set: (value) => {
        const regexp = /#(\w+)$/;
        const res = regexp.exec(value);
        if (res) {
            return res[1].toLowerCase();
        }
        return null;
    },
};
let EncapsulatedPKIData = class EncapsulatedPKIData extends XadesObject {
};
__decorate([
    XmlAttribute({
        localName: XmlXades.AttributeNames.Id,
        defaultValue: '',
    }),
    __metadata("design:type", String)
], EncapsulatedPKIData.prototype, "Id", void 0);
__decorate([
    XmlAttribute({
        localName: XmlXades.AttributeNames.Encoding,
        defaultValue: null,
        converter: XmlEncodingConverter,
    }),
    __metadata("design:type", Object)
], EncapsulatedPKIData.prototype, "Encoding", void 0);
__decorate([
    XmlContent({
        required: true,
        converter: XmlBase64Converter,
    }),
    __metadata("design:type", Uint8Array)
], EncapsulatedPKIData.prototype, "Value", void 0);
EncapsulatedPKIData = __decorate([
    XmlElement({ localName: 'EncapsulatedPKIData' })
], EncapsulatedPKIData);
export { EncapsulatedPKIData };
