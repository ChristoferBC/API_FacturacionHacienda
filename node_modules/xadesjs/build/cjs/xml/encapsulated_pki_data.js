"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EncapsulatedPKIData = void 0;
const tslib_1 = require("tslib");
const xml_core_1 = require("xml-core");
const xml_js_1 = require("./xml.js");
const xml_base_js_1 = require("./xml_base.js");
const XmlEncodingConverter = {
    get: (value) => {
        switch (value) {
            case 'der':
            case 'ber':
            case 'cer':
            case 'per':
            case 'xer':
                return `http://uri.etsi.org/01903/v1.2.2#${value.toUpperCase()}`;
        }
        return void 0;
    },
    set: (value) => {
        const regexp = /#(\w+)$/;
        const res = regexp.exec(value);
        if (res) {
            return res[1].toLowerCase();
        }
        return null;
    },
};
let EncapsulatedPKIData = class EncapsulatedPKIData extends xml_base_js_1.XadesObject {
};
exports.EncapsulatedPKIData = EncapsulatedPKIData;
tslib_1.__decorate([
    (0, xml_core_1.XmlAttribute)({
        localName: xml_js_1.XmlXades.AttributeNames.Id,
        defaultValue: '',
    }),
    tslib_1.__metadata("design:type", String)
], EncapsulatedPKIData.prototype, "Id", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlAttribute)({
        localName: xml_js_1.XmlXades.AttributeNames.Encoding,
        defaultValue: null,
        converter: XmlEncodingConverter,
    }),
    tslib_1.__metadata("design:type", Object)
], EncapsulatedPKIData.prototype, "Encoding", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlContent)({
        required: true,
        converter: xml_core_1.XmlBase64Converter,
    }),
    tslib_1.__metadata("design:type", Uint8Array)
], EncapsulatedPKIData.prototype, "Value", void 0);
exports.EncapsulatedPKIData = EncapsulatedPKIData = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: 'EncapsulatedPKIData' })
], EncapsulatedPKIData);
