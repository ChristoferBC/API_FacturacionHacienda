"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenericTimeStamp = exports.XMLTimeStampCollection = exports.XMLTimeStamp = exports.EncapsulatedTimeStampCollection = exports.EncapsulatedTimeStamp = exports.ReferenceInfos = exports.ReferenceInfo = exports.Include = void 0;
const tslib_1 = require("tslib");
const xml_core_1 = require("xml-core");
const xmldsigjs_1 = require("xmldsigjs");
const any_js_1 = require("./any.js");
const encapsulated_pki_data_js_1 = require("./encapsulated_pki_data.js");
const xml_js_1 = require("./xml.js");
const xml_base_js_1 = require("./xml_base.js");
let Include = class Include extends xml_base_js_1.XadesObject {
};
exports.Include = Include;
tslib_1.__decorate([
    (0, xml_core_1.XmlAttribute)({
        localName: xml_js_1.XmlXades.AttributeNames.URI,
        defaultValue: '',
        required: true,
    }),
    tslib_1.__metadata("design:type", String)
], Include.prototype, "Uri", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlAttribute)({
        localName: xml_js_1.XmlXades.AttributeNames.ReferencedData,
        defaultValue: false,
    }),
    tslib_1.__metadata("design:type", Boolean)
], Include.prototype, "ReferencedData", void 0);
exports.Include = Include = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.Include })
], Include);
let ReferenceInfo = class ReferenceInfo extends xml_base_js_1.XadesObject {
    constructor() {
        super(...arguments);
        this.DigestMethod = new xmldsigjs_1.DigestMethod();
    }
};
exports.ReferenceInfo = ReferenceInfo;
tslib_1.__decorate([
    (0, xml_core_1.XmlAttribute)({
        localName: xml_js_1.XmlXades.AttributeNames.URI,
        defaultValue: '',
    }),
    tslib_1.__metadata("design:type", String)
], ReferenceInfo.prototype, "Uri", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlAttribute)({
        localName: xml_js_1.XmlXades.AttributeNames.Id,
        defaultValue: '',
    }),
    tslib_1.__metadata("design:type", String)
], ReferenceInfo.prototype, "Id", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        required: true,
        parser: xmldsigjs_1.DigestMethod,
    }),
    tslib_1.__metadata("design:type", Object)
], ReferenceInfo.prototype, "DigestMethod", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        required: true,
        localName: xmldsigjs_1.XmlSignature.ElementNames.DigestValue,
        namespaceURI: xmldsigjs_1.XmlSignature.NamespaceURI,
        prefix: xmldsigjs_1.XmlSignature.DefaultPrefix,
        converter: xml_core_1.XmlBase64Converter,
    }),
    tslib_1.__metadata("design:type", Uint8Array)
], ReferenceInfo.prototype, "DigestValue", void 0);
exports.ReferenceInfo = ReferenceInfo = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.ReferenceInfo })
], ReferenceInfo);
let ReferenceInfos = class ReferenceInfos extends xml_base_js_1.XadesCollection {
};
exports.ReferenceInfos = ReferenceInfos;
exports.ReferenceInfos = ReferenceInfos = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({
        localName: 'ReferenceInfos',
        parser: ReferenceInfo,
    })
], ReferenceInfos);
let EncapsulatedTimeStamp = class EncapsulatedTimeStamp extends encapsulated_pki_data_js_1.EncapsulatedPKIData {
};
exports.EncapsulatedTimeStamp = EncapsulatedTimeStamp;
exports.EncapsulatedTimeStamp = EncapsulatedTimeStamp = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.EncapsulatedTimeStamp })
], EncapsulatedTimeStamp);
let EncapsulatedTimeStampCollection = class EncapsulatedTimeStampCollection extends xml_base_js_1.XadesCollection {
};
exports.EncapsulatedTimeStampCollection = EncapsulatedTimeStampCollection;
exports.EncapsulatedTimeStampCollection = EncapsulatedTimeStampCollection = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({
        localName: 'EncapsulatedPKIDatas',
        parser: EncapsulatedTimeStamp,
    })
], EncapsulatedTimeStampCollection);
let XMLTimeStamp = class XMLTimeStamp extends any_js_1.Any {
};
exports.XMLTimeStamp = XMLTimeStamp;
exports.XMLTimeStamp = XMLTimeStamp = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.XMLTimeStamp })
], XMLTimeStamp);
let XMLTimeStampCollection = class XMLTimeStampCollection extends xml_base_js_1.XadesCollection {
};
exports.XMLTimeStampCollection = XMLTimeStampCollection;
exports.XMLTimeStampCollection = XMLTimeStampCollection = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({
        localName: 'XMLTimeStampCollection',
        parser: XMLTimeStamp,
    })
], XMLTimeStampCollection);
let GenericTimeStamp = class GenericTimeStamp extends xml_base_js_1.XadesObject {
};
exports.GenericTimeStamp = GenericTimeStamp;
tslib_1.__decorate([
    (0, xml_core_1.XmlAttribute)({
        localName: xml_js_1.XmlXades.AttributeNames.Id,
        defaultValue: '',
    }),
    tslib_1.__metadata("design:type", String)
], GenericTimeStamp.prototype, "Id", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({ parser: Include }),
    tslib_1.__metadata("design:type", Include)
], GenericTimeStamp.prototype, "Include", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        parser: ReferenceInfos,
        noRoot: true,
    }),
    tslib_1.__metadata("design:type", ReferenceInfos)
], GenericTimeStamp.prototype, "ReferenceInfo", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({ parser: xmldsigjs_1.CanonicalizationMethod }),
    tslib_1.__metadata("design:type", xmldsigjs_1.CanonicalizationMethod)
], GenericTimeStamp.prototype, "CanonicalizationMethod", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        parser: EncapsulatedTimeStampCollection,
        noRoot: true,
    }),
    tslib_1.__metadata("design:type", EncapsulatedTimeStampCollection)
], GenericTimeStamp.prototype, "EncapsulatedTimeStamp", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        parser: XMLTimeStampCollection,
        noRoot: true,
    }),
    tslib_1.__metadata("design:type", XMLTimeStampCollection)
], GenericTimeStamp.prototype, "XMLTimeStamp", void 0);
exports.GenericTimeStamp = GenericTimeStamp = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: 'GenericTimeStamp' })
], GenericTimeStamp);
