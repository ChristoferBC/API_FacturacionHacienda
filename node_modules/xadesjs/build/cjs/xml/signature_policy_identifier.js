"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SignaturePolicyIdentifier = exports.SignaturePolicyId = exports.SigPolicyQualifiers = exports.SPURI = exports.SPUserNotice = exports.NoticeReference = exports.IntegerList = exports.Integer = exports.SigPolicyQualifier = exports.SigPolicyHash = exports.SigPolicyId = void 0;
const tslib_1 = require("tslib");
const xml_core_1 = require("xml-core");
const xmldsigjs_1 = require("xmldsigjs");
const any_js_1 = require("./any.js");
const object_identifier_js_1 = require("./object_identifier.js");
const signing_certificate_js_1 = require("./signing_certificate.js");
const xml_js_1 = require("./xml.js");
const xml_base_js_1 = require("./xml_base.js");
let SigPolicyId = class SigPolicyId extends object_identifier_js_1.ObjectIdentifier {
};
exports.SigPolicyId = SigPolicyId;
exports.SigPolicyId = SigPolicyId = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.SigPolicyId })
], SigPolicyId);
let SigPolicyHash = class SigPolicyHash extends signing_certificate_js_1.DigestAlgAndValueType {
};
exports.SigPolicyHash = SigPolicyHash;
exports.SigPolicyHash = SigPolicyHash = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.SigPolicyHash })
], SigPolicyHash);
let SigPolicyQualifier = class SigPolicyQualifier extends any_js_1.AnyCollection {
};
exports.SigPolicyQualifier = SigPolicyQualifier;
exports.SigPolicyQualifier = SigPolicyQualifier = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.SigPolicyQualifier })
], SigPolicyQualifier);
let Integer = class Integer extends xml_base_js_1.XadesObject {
};
exports.Integer = Integer;
tslib_1.__decorate([
    (0, xml_core_1.XmlContent)({
        converter: xml_core_1.XmlNumberConverter,
        required: true,
    }),
    tslib_1.__metadata("design:type", Number)
], Integer.prototype, "Value", void 0);
exports.Integer = Integer = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: 'int' })
], Integer);
let IntegerList = class IntegerList extends xml_base_js_1.XadesCollection {
};
exports.IntegerList = IntegerList;
exports.IntegerList = IntegerList = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({
        localName: 'IntegerList',
        parser: Integer,
    })
], IntegerList);
let NoticeReference = class NoticeReference extends xml_base_js_1.XadesObject {
};
exports.NoticeReference = NoticeReference;
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.Organization,
        namespaceURI: xml_js_1.XmlXades.NamespaceURI,
        prefix: xml_js_1.XmlXades.DefaultPrefix,
        required: true,
    }),
    tslib_1.__metadata("design:type", String)
], NoticeReference.prototype, "Organization", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.NoticeNumbers,
        parser: IntegerList,
        required: true,
    }),
    tslib_1.__metadata("design:type", IntegerList)
], NoticeReference.prototype, "NoticeNumbers", void 0);
exports.NoticeReference = NoticeReference = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.NoticeRef })
], NoticeReference);
let SPUserNotice = class SPUserNotice extends xml_base_js_1.XadesObject {
};
exports.SPUserNotice = SPUserNotice;
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.NoticeRef,
        parser: NoticeReference,
    }),
    tslib_1.__metadata("design:type", NoticeReference)
], SPUserNotice.prototype, "NoticeRef", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.ExplicitText,
        namespaceURI: xml_js_1.XmlXades.NamespaceURI,
        prefix: xml_js_1.XmlXades.DefaultPrefix,
    }),
    tslib_1.__metadata("design:type", String)
], SPUserNotice.prototype, "ExplicitText", void 0);
exports.SPUserNotice = SPUserNotice = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.SPUserNotice })
], SPUserNotice);
let SPURI = class SPURI extends xml_base_js_1.XadesObject {
};
exports.SPURI = SPURI;
tslib_1.__decorate([
    (0, xml_core_1.XmlContent)(),
    tslib_1.__metadata("design:type", String)
], SPURI.prototype, "Value", void 0);
exports.SPURI = SPURI = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.SPURI })
], SPURI);
let SigPolicyQualifiers = class SigPolicyQualifiers extends xml_base_js_1.XadesCollection {
};
exports.SigPolicyQualifiers = SigPolicyQualifiers;
exports.SigPolicyQualifiers = SigPolicyQualifiers = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({
        localName: xml_js_1.XmlXades.ElementNames.SigPolicyQualifiers,
        parser: SigPolicyQualifier,
    })
], SigPolicyQualifiers);
let SignaturePolicyId = class SignaturePolicyId extends xml_base_js_1.XadesObject {
};
exports.SignaturePolicyId = SignaturePolicyId;
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.SigPolicyId,
        parser: SigPolicyId,
        required: true,
    }),
    tslib_1.__metadata("design:type", SigPolicyId)
], SignaturePolicyId.prototype, "SigPolicyId", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({ parser: xmldsigjs_1.Transforms }),
    tslib_1.__metadata("design:type", xmldsigjs_1.Transforms)
], SignaturePolicyId.prototype, "Transforms", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.SigPolicyHash,
        parser: SigPolicyHash,
        required: true,
    }),
    tslib_1.__metadata("design:type", SigPolicyHash)
], SignaturePolicyId.prototype, "SigPolicyHash", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.SigPolicyQualifiers,
        parser: SigPolicyQualifiers,
    }),
    tslib_1.__metadata("design:type", SigPolicyQualifiers)
], SignaturePolicyId.prototype, "SigPolicyQualifiers", void 0);
exports.SignaturePolicyId = SignaturePolicyId = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.SignaturePolicyId })
], SignaturePolicyId);
const XmlSignaturePolicyImpliedConverter = {
    set: (value) => {
        return true;
    },
    get: (value) => {
        return '';
    },
};
let SignaturePolicyIdentifier = class SignaturePolicyIdentifier extends xml_base_js_1.XadesObject {
};
exports.SignaturePolicyIdentifier = SignaturePolicyIdentifier;
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.SignaturePolicyId,
        namespaceURI: xml_js_1.XmlXades.NamespaceURI,
        prefix: xml_js_1.XmlXades.DefaultPrefix,
        parser: SignaturePolicyId,
    }),
    tslib_1.__metadata("design:type", SignaturePolicyId)
], SignaturePolicyIdentifier.prototype, "SignaturePolicyId", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.SignaturePolicyImplied,
        namespaceURI: xml_js_1.XmlXades.NamespaceURI,
        prefix: xml_js_1.XmlXades.DefaultPrefix,
        converter: XmlSignaturePolicyImpliedConverter,
        defaultValue: false,
    }),
    tslib_1.__metadata("design:type", Boolean)
], SignaturePolicyIdentifier.prototype, "SignaturePolicyImplied", void 0);
exports.SignaturePolicyIdentifier = SignaturePolicyIdentifier = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.SignaturePolicyIdentifier })
], SignaturePolicyIdentifier);
