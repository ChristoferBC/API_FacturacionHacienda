"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompleteRevocationRefs = exports.CRLRefs = exports.CRLRef = exports.CRLIdentifier = exports.OCSPRefs = exports.OCSPRef = exports.OCSPIdentifier = exports.ResponderID = exports.OtherRefs = exports.OtherRef = void 0;
const tslib_1 = require("tslib");
const xml_core_1 = require("xml-core");
const any_js_1 = require("./any.js");
const date_time_js_1 = require("./date_time.js");
const signing_certificate_js_1 = require("./signing_certificate.js");
const xml_js_1 = require("./xml.js");
const xml_base_js_1 = require("./xml_base.js");
let OtherRef = class OtherRef extends any_js_1.Any {
};
exports.OtherRef = OtherRef;
exports.OtherRef = OtherRef = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.OtherRef })
], OtherRef);
let OtherRefs = class OtherRefs extends xml_base_js_1.XadesCollection {
};
exports.OtherRefs = OtherRefs;
exports.OtherRefs = OtherRefs = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.OtherRefs })
], OtherRefs);
let ResponderID = class ResponderID extends xml_base_js_1.XadesObject {
};
exports.ResponderID = ResponderID;
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.ByName,
        namespaceURI: xml_js_1.XmlXades.NamespaceURI,
        prefix: xml_js_1.XmlXades.DefaultPrefix,
        required: true,
    }),
    tslib_1.__metadata("design:type", String)
], ResponderID.prototype, "ByName", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.ByKey,
        namespaceURI: xml_js_1.XmlXades.NamespaceURI,
        prefix: xml_js_1.XmlXades.DefaultPrefix,
        converter: xml_core_1.XmlBase64Converter,
        required: true,
    }),
    tslib_1.__metadata("design:type", Uint8Array)
], ResponderID.prototype, "ByKey", void 0);
exports.ResponderID = ResponderID = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.OCSPIdentifier })
], ResponderID);
let OCSPIdentifier = class OCSPIdentifier extends xml_base_js_1.XadesObject {
};
exports.OCSPIdentifier = OCSPIdentifier;
tslib_1.__decorate([
    (0, xml_core_1.XmlAttribute)({
        localName: xml_js_1.XmlXades.AttributeNames.URI,
        defaultValue: '',
    }),
    tslib_1.__metadata("design:type", String)
], OCSPIdentifier.prototype, "URI", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        parser: ResponderID,
        required: true,
    }),
    tslib_1.__metadata("design:type", ResponderID)
], OCSPIdentifier.prototype, "ResponderID", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.IssueTime,
        parser: date_time_js_1.XadesDateTime,
        required: true,
    }),
    tslib_1.__metadata("design:type", date_time_js_1.XadesDateTime)
], OCSPIdentifier.prototype, "ProducedAt", void 0);
exports.OCSPIdentifier = OCSPIdentifier = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.OCSPIdentifier })
], OCSPIdentifier);
let OCSPRef = class OCSPRef extends xml_base_js_1.XadesObject {
};
exports.OCSPRef = OCSPRef;
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({ parser: OCSPIdentifier }),
    tslib_1.__metadata("design:type", OCSPIdentifier)
], OCSPRef.prototype, "OCSPIdentifier", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        parser: signing_certificate_js_1.DigestAlgAndValueType,
        required: true,
    }),
    tslib_1.__metadata("design:type", signing_certificate_js_1.DigestAlgAndValueType)
], OCSPRef.prototype, "DigestAlgAndValue", void 0);
exports.OCSPRef = OCSPRef = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.OCSPRef })
], OCSPRef);
let OCSPRefs = class OCSPRefs extends xml_base_js_1.XadesCollection {
};
exports.OCSPRefs = OCSPRefs;
exports.OCSPRefs = OCSPRefs = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.OCSPRefs })
], OCSPRefs);
let CRLIdentifier = class CRLIdentifier extends xml_base_js_1.XadesObject {
};
exports.CRLIdentifier = CRLIdentifier;
tslib_1.__decorate([
    (0, xml_core_1.XmlAttribute)({
        localName: xml_js_1.XmlXades.AttributeNames.URI,
        defaultValue: '',
    }),
    tslib_1.__metadata("design:type", String)
], CRLIdentifier.prototype, "URI", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.Issuer,
        namespaceURI: xml_js_1.XmlXades.NamespaceURI,
        prefix: xml_js_1.XmlXades.DefaultPrefix,
        required: true,
    }),
    tslib_1.__metadata("design:type", String)
], CRLIdentifier.prototype, "Issuer", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.IssueTime,
        parser: date_time_js_1.XadesDateTime,
        required: true,
    }),
    tslib_1.__metadata("design:type", date_time_js_1.XadesDateTime)
], CRLIdentifier.prototype, "IssueTime", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.Number,
        namespaceURI: xml_js_1.XmlXades.NamespaceURI,
        prefix: xml_js_1.XmlXades.DefaultPrefix,
        converter: xml_core_1.XmlNumberConverter,
    }),
    tslib_1.__metadata("design:type", Number)
], CRLIdentifier.prototype, "Number", void 0);
exports.CRLIdentifier = CRLIdentifier = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.CRLIdentifier })
], CRLIdentifier);
let CRLRef = class CRLRef extends xml_base_js_1.XadesObject {
};
exports.CRLRef = CRLRef;
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        parser: signing_certificate_js_1.DigestAlgAndValueType,
        required: true,
    }),
    tslib_1.__metadata("design:type", signing_certificate_js_1.DigestAlgAndValueType)
], CRLRef.prototype, "DigestAlgAndValue", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({ parser: CRLIdentifier }),
    tslib_1.__metadata("design:type", CRLIdentifier)
], CRLRef.prototype, "CRLIdentifier", void 0);
exports.CRLRef = CRLRef = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.CRLRef })
], CRLRef);
let CRLRefs = class CRLRefs extends xml_base_js_1.XadesCollection {
};
exports.CRLRefs = CRLRefs;
exports.CRLRefs = CRLRefs = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.CRLRefs })
], CRLRefs);
let CompleteRevocationRefs = class CompleteRevocationRefs extends xml_base_js_1.XadesObject {
};
exports.CompleteRevocationRefs = CompleteRevocationRefs;
tslib_1.__decorate([
    (0, xml_core_1.XmlAttribute)({
        localName: xml_js_1.XmlXades.AttributeNames.Id,
        defaultValue: '',
    }),
    tslib_1.__metadata("design:type", String)
], CompleteRevocationRefs.prototype, "Id", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({ parser: CRLRefs }),
    tslib_1.__metadata("design:type", CRLRefs)
], CompleteRevocationRefs.prototype, "CRLRefs", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({ parser: OCSPRefs }),
    tslib_1.__metadata("design:type", OCSPRefs)
], CompleteRevocationRefs.prototype, "OCSPRefs", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({ parser: OtherRefs }),
    tslib_1.__metadata("design:type", OtherRefs)
], CompleteRevocationRefs.prototype, "OtherRefs", void 0);
exports.CompleteRevocationRefs = CompleteRevocationRefs = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.CompleteRevocationRefs })
], CompleteRevocationRefs);
