"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CommitmentTypeIndication = exports.ObjectReferenceCollection = exports.ObjectReference = exports.CommitmentTypeQualifiers = exports.CommitmentTypeQualifier = void 0;
const tslib_1 = require("tslib");
const xml_core_1 = require("xml-core");
const any_js_1 = require("./any.js");
const object_identifier_js_1 = require("./object_identifier.js");
const xml_js_1 = require("./xml.js");
const xml_base_js_1 = require("./xml_base.js");
let CommitmentTypeQualifier = class CommitmentTypeQualifier extends any_js_1.Any {
};
exports.CommitmentTypeQualifier = CommitmentTypeQualifier;
exports.CommitmentTypeQualifier = CommitmentTypeQualifier = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.CommitmentTypeQualifier })
], CommitmentTypeQualifier);
let CommitmentTypeQualifiers = class CommitmentTypeQualifiers extends xml_base_js_1.XadesCollection {
};
exports.CommitmentTypeQualifiers = CommitmentTypeQualifiers;
exports.CommitmentTypeQualifiers = CommitmentTypeQualifiers = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({
        localName: xml_js_1.XmlXades.ElementNames.CommitmentTypeQualifiers,
        parser: CommitmentTypeQualifier,
    })
], CommitmentTypeQualifiers);
let ObjectReference = class ObjectReference extends xml_base_js_1.XadesObject {
};
exports.ObjectReference = ObjectReference;
tslib_1.__decorate([
    (0, xml_core_1.XmlContent)({ required: true }),
    tslib_1.__metadata("design:type", String)
], ObjectReference.prototype, "Value", void 0);
exports.ObjectReference = ObjectReference = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.ObjectReference })
], ObjectReference);
let ObjectReferenceCollection = class ObjectReferenceCollection extends xml_base_js_1.XadesCollection {
};
exports.ObjectReferenceCollection = ObjectReferenceCollection;
exports.ObjectReferenceCollection = ObjectReferenceCollection = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({
        localName: 'ObjectReferences',
        parser: ObjectReference,
    })
], ObjectReferenceCollection);
const XmlAllSignedDataObjectsConverter = {
    set: (value) => {
        return true;
    },
    get: (value) => {
        return void 0;
    },
};
let CommitmentTypeIndication = class CommitmentTypeIndication extends xml_base_js_1.XadesObject {
};
exports.CommitmentTypeIndication = CommitmentTypeIndication;
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.CommitmentTypeId,
        required: true,
        namespaceURI: xml_js_1.XmlXades.NamespaceURI,
        prefix: xml_js_1.XmlXades.DefaultPrefix,
        parser: object_identifier_js_1.ObjectIdentifier,
    }),
    tslib_1.__metadata("design:type", object_identifier_js_1.ObjectIdentifier)
], CommitmentTypeIndication.prototype, "CommitmentTypeId", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        parser: ObjectReferenceCollection,
        noRoot: true,
    }),
    tslib_1.__metadata("design:type", ObjectReferenceCollection)
], CommitmentTypeIndication.prototype, "ObjectReference", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.AllSignedDataObjects,
        namespaceURI: xml_js_1.XmlXades.NamespaceURI,
        prefix: xml_js_1.XmlXades.DefaultPrefix,
        converter: XmlAllSignedDataObjectsConverter,
        defaultValue: false,
    }),
    tslib_1.__metadata("design:type", Boolean)
], CommitmentTypeIndication.prototype, "AllSignedDataObjects", void 0);
tslib_1.__decorate([
    (0, xml_core_1.XmlChildElement)({
        localName: xml_js_1.XmlXades.ElementNames.CommitmentTypeQualifiers,
        parser: CommitmentTypeQualifier,
    }),
    tslib_1.__metadata("design:type", CommitmentTypeQualifiers)
], CommitmentTypeIndication.prototype, "CommitmentTypeQualifiers", void 0);
exports.CommitmentTypeIndication = CommitmentTypeIndication = tslib_1.__decorate([
    (0, xml_core_1.XmlElement)({ localName: xml_js_1.XmlXades.ElementNames.CommitmentTypeIndication })
], CommitmentTypeIndication);
